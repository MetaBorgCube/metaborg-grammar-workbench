module yacc

imports

  Common
  c

context-free start-symbols

  Grammar

template options

  keyword -/- [0-9A-Za-z]
  ID = keyword {reject}
  tokenize : "({;"

context-free syntax // Inspired by http://dinosaur.compilertools.net/yacc/ Appendix B

  Grammar.Grammar = <
                     <Definitions>
                     %%
                     <Rules><Tail?>
                    >

  Definitions.Definitions = <<{Def "\n"}*>>
  Rules.Rules = <<{Rule "\n"}*>>
  Tail.Tail = <

               %%
               <Translation-unit?>
              >


  Def.Start    = <%start <ID>>
  Def.Token    = <%token <Tag?><Identifier+>> // TODO ID can be followed by number?
  Def.Left     = <%left <Tag?><Identifier+>>
  Def.Right    = <%right <Tag?><Identifier+>>
  Def.NonAssoc = <%nonassoc <Tag?><Identifier+>>
  Def.Type     = <%type <Tag?><Identifier+>>
  Def.Union    = <
                  %union {
                      <Struct-declaration-list>
                  }
                 >
  Def.Code     = <
                  %{
                      <Translation-unit?>
                  %}
                 >

  Tag.Tag = [<[ID]> ]


  // TODO pretty-printing of multiple RHS puts the '|' on the end of the line instead of the next line
  Rule.Rule = <
               <ID> : <{RHS "\n |"}+> ;
              >

  RHS.RHS = <<Identifier*><Prec?><Statement-list?>>

  Prec.Prec = < %prec <Identifier>>


  Identifier.ID = ID
  Identifier.String = STRING
  Identifier.SQString = SQSTRING
  Identifier.Error = <error>

lexical syntax

  IDENTIFIER = "$" [0-9\$]
