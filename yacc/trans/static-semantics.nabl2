module static-semantics

imports

  signatures/-

signature

  name resolution

    namespaces Sort Start

rules

  init ^ (s) := new s.

  // TODO check precedence rules
  // TODO tokens in %left, %right, %nonassoc should have different namespace/scope
    // http://dinosaur.compilertools.net/yacc/ Section 6, halfway down:
    // A token declared by %left, %right, and %nonassoc need not be, but may be, declared by %token as well.
  // TODO use %type definitions for type checking?
  // TODO Identifier can not be `error` in most rule (and there might be some other restrictions)

  [[ Grammar(defs, rules, _) ^ (s) ]] :=
    Map1[[ defs ^ (s) ]],
    Map1[[ rules ^ (s) ]],
    ShouldNotBeEmpty[[ rules ^ (s) ]],
    Start{"start"} -> s,
    distinct/name D(s)/Start | error "Multiple start symbols defined" @NAMES.

  ShouldNotBeEmpty[[ [] ^ (s) ]] := false | error "There should at least be one rule".
  ShouldNotBeEmpty[[ [_ | _] ^ (s) ]].

  [[ Start(id) ^ (s) ]] :=
    Start{"start"} <- s,
    Sort{id} -> s,
    Sort{id} |-> d | error $[Sort [id] not found] @id.

  // TODO note if token is not used
  [[ Token(_, ids) ^ (s) ]] := Map1(definition)[[ ids ^ (s) ]].
  [[ Left(_, ids) ^ (s) ]] := Map1(definition)[[ ids ^ (s) ]].
  [[ Right(_, ids) ^ (s) ]] := Map1(definition)[[ ids ^ (s) ]].
  [[ NonAssoc(_, ids) ^ (s) ]] := Map1(definition)[[ ids ^ (s) ]].
  [[ Type(_, ids) ^ (s) ]] := Map1(usage)[[ ids ^ (s) ]].
  [[ Union(_) ^ (s) ]] := true.
  [[ Code(_) ^ (s) ]] := true.

  definition [[ ID(id) ^ (s) ]] :=
    Sort{id} <- s.


  // TODO in theory, it is allowed to have multiple rules with the same LHS. They should be merged.
  // TODO warning if a rule only has RHSs containing `error`
  [[ Rule(left, rs) ^ (s) ]] :=
    Sort{left} <- s,
    Map1[[ rs ^ (s) ]].

  [[ RHS(ids, prec, _) ^ (s) ]] :=
    Map1(usage)[[ ids ^ (s) ]].

  usage [[ ID(id) ^ (s) ]] :=
    Sort{id} -> s,
    Sort{id} |-> d | error $[Sort [id] not found].

  usage[[ String(_) ^ (s) ]].
  usage[[ SQString(_) ^ (s) ]].
  usage[[ Error() ^ (s) ]].
  definition[[ String(_) ^ (s) ]].
  definition[[ SQString(_) ^ (s) ]].
  definition[[ Error() ^ (s) ]].
