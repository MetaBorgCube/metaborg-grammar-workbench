module codegen/build

imports

  libspoofax/resource/path
  signatures/TemplateLang-sig

  codegen/-
  trans/pp

rules

  /**
   * Rename an SDF3 module corresponding to the filename.
   *
   * @param newname the filename of this module, with or without extension.
   */
  rename-sdf3-module(|newname):
    Module(Unparameterized(name), a, b) -> Module(Unparameterized(<remove-extension> newname), a, b)

  /**
   * Transform LEX AST to SDF3 AST and show the resulting ATerm.
   */
  show-sdf3: (selected, _, ast, path, project-path) -> (filename, result)
    with
      filename := <guarantee-extension(|"sdf3.aterm")> path
    ; result   := <rename-sdf3-module(|path)> <lex-to-sdf3> ast

  /**
   * Generate SDF3 files (.sdf3 files) for the LEX AST.
   */
  generate-sdf3: (selected, x, ast, path, project-path) -> (filename, result)
    with
      (_, resultAST) := <show-sdf3> (selected, x, ast, path, project-path)
    ; filename := <guarantee-extension(|"sdf3")> path
    ; result := <all-lines(trim-trailing-whitespace)> <string-replace(|"\n\n\n", "\n\n")>
                <pp-SDF3-string> resultAST

  /**
   * Generates an SDF3 string, with double-quotes escaped, to make it work in SPT.
   * NOTE when updating to 2.5.0, this unescaping (done by the string-replace) will no longer be needed.
   *   See https://github.com/metaborg/spt/pull/22
   * NOTE when SPT no longer performs file analysis on SDF3 expectations inside [[ ... ]] blocks,
   *   this becomes obsolete, since the expectation can then be replaced with:
   *     transform "Generate from YACC -> SDF3 (.sdf3 file)" to TemplateLang [[ ... ]]
   */
  generate-sdf3-test: ast -> <string-replace(|"\"", "\\\"")> output
    with (_, output) := <generate-sdf3> (ast, None(), ast, "test-lex.lex", <project-path>)

  /**
   * Alias of generate-sdf3-test, but collapses all newlines and spaces into a single space.
   * This means that test expectaions can be written on a single line for compactness.
   * NOTE when SPT no longer performs file analysis SDF3 expectations inside [[ ... ]] blocks,
   *   this becomes obsolete. See generate-sdf3-test.
   */
  generate-sdf3-test-oneline = generate-sdf3-test
                             ; string-replace(|"\r", " ")
                             ; string-replace(|"\n", " ")
                             ; while(where(is-substring(!"  ")), string-replace(|"  ", " "))
                             ; trim-whitespace
